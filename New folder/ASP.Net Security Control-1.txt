

Which property of UpdatePanel control gets or sets a Boolean value that indicates whether child controls should trigger an asynchronous postback automatically?
	
ChildrenAsTriggers -----------------
	
RenderMode 
	
ContentTemplateContainer 
	
IsInPartialRendering 


How do you create a persistent cookie?
	
By using the CreatePersistentCookie attribute of the Role Manager -----------
	
By using the PersistentCookie attribute of the Role Manager 
	
By using the CookieProtection attribute of the Role Manager 
	
By using the CreateCookie attribute of the Role Manager 


What does WindowsTokenRoleProvider do?
	
Enables you to use ActiveDirectory to represent role information 
	
Enables you to use Microsoft Windows groups to represent role information -------------
	
Enables you to store role information in a Microsoft SQL Server database 
	
Enables you to use Authorization Manager 




Which Membership provider attributes can be set to determine the password policy?
1.minRequiredPasswordLength
2.maxRequiredPasswordLength
3.minRequiredAlphanumericCharacters
4.minRequiredNonalphanumericCharacters
5.passwordStrengthRegularExpression
	
1&3&4 
	
2&4&5 
	
1&2&5 
	
1&4&5 ------------
	
2&3 




What happens when a button placed in the UpdatePanel control is clicked?
1.The page is posted back to the server
2.UpdatePanel sends the details of button_click event to the server via postback
3.UpdatePanel hijacks the button_click event
4.UpdatePanel performs a  Ajax call instead of normal postback
	
1&4 
	
1&2 
	
3&4 ---------------
	
2&3 




How can you explicitly abort a previous asynchronous postback?
	
By using PageRequestManager abortPostBack() method ----------------------
	
By using PageRequestManager abortPreviousPostBack() method 
	
By using PageRequestManager abortPreviousAsyncPostBack() method 
	
By using PageRequestManager abortAsyncPostBack() method 



What does the following code snippet do?
<configuration>
 <system.web>
  <authorization>
   <allow roles=”Accounts”/>
   <deny users=”*”/>
  </authorization>
 </system.web>
</configuration>
	
The configuration file authorizes only Accounts administrators 
	
The configuration file authorizes Accounts & denies access to everyone else -------------------
	
The configuration file authorizes everyone except Accounts 
	
The configuration file authorizes every website user 



Which are the different security mechanisms that are included in the ASP.NET Framework?
1.ASP.NET Authentication
2.ASP.NET Authorization
3.ASP.NET Membership
4.ASP.NET Encryption
5.Role Manager
	
1&3&5 
	
1&2&3&5 --------------
	
1&2&3&4 
	
4&5 
	
2&3&4 




What do the settings in the following web.config do?
<configuration>
 <system.web>
  <roleManager
   enabled=”true”
   cacheRolesInCookie=”true”
   createPersistentCookie=”true” />
 </system.web>
</configuration>
	
The settings enable role verification 
	
The settings enable caching roles in a database 
	
The settings enable user roles 
	
The settings enable caching roles in a browser cookie -------------



What does the following code snippet denote?
<configuration>
 <system.web>
  <authentication mode=”Forms” />
   <membership defaultProvider=”OwnMembershipProvider”>
    <providers>
  
     <add
     name=”OwnMembershipProvider”
     type=”MembershipProvider.XmlOwnMembershipProvider” 
     dataFile=”~/App_Data/OwnMembership.xml”
     requiresQuestionAndAnswer=”false”
     enablePasswordRetrieval=”true”
     enablePasswordReset=”true”
     passwordFormat=”Clear” />
    </providers>
   </membership>
 </system.web>
</configuration>

	
It shows how the config file is configured to use membership information from the active directory 
	
It shows how the config file is configured to create a custom membership provider --------------
	
It shows how the config file is configured to use membership information from a database other than the default SQL Server database 
	
It shows how the config file is configured to use membership information from the default SQL Server database 






What does the following code snippet do?
<configuration>
 <system.web>
  <authentication mode=”Windows” />
   <roleManager enabled=”true” defaultProvider=”MyRoleProvider”>
    <providers>
     <add
     name=”MyRoleProvider”
     type=”System.Web.Security.WindowsTokenRoleProvider” />
    </providers>
   </roleManager>
 </system.web>
</configuration>
	
The configuration file configures the SqlRoleProvideras the default provider 
	
The configuration file configures the ActiveDirectoryRoleProvider as the default provider 
	
The configuration file configures the AuthorizationStoreRoleProvider as the default provider 
	
The configuration file configures the WindowsTokenRoleProvider as the default provider -------------



What does AuthorizationStoreRoleProvider do?
	
Enables you to store role information in a Microsoft SQL Server database 
	
Enables you to use ActiveDirectory to represent role information 
	
Enables you to use Microsoft Windows groups to represent role information 
	
Enables you to use Authorization Manager to store role information in an XML file, Active Directory, or Activity Directory Application Mode ----------------




Which method enables you to return a list of users in a role that has a particular username?
	
FindUsersInRole --------------
	
GetUsersInRole 
	
AddUsersToRole 
	
IsUserInRole 
